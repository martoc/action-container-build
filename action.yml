---
name: "Build a container with Docker"
description: |
  This action builds a container with Docker and pushes it to a registry.
author: martoc
inputs:
  registry:
    description: 'Registry to push the container to (default: docker.io) valid values: docker.io, gcp, aws'
    required: false
    default: 'docker.io'
  region:
    description: 'Region to push the container to valid values: google cloud or aws regions'
    required: false
    default: ''
  gcp_project_id:
    description: 'Google Cloud Project ID'
    required: false
    default: ''
  gcp_repository_name:
    description: 'Google Cloud Repository Name'
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    - name: Container Build
      shell: bash
      run: |
        NAME="${{ github.repository }}"
        NAME="${NAME#*/}"
        NAME="${NAME#docker-}"

        if [ -z "${PLATFORMS}" ]; then
          PLATFORMS="linux/arm64,linux/amd64"
        fi

        if [ -z "${DOCKERFILE}" ]; then
          DOCKERFILE="Dockerfile"
        fi

        if [ -z "${WORKDIR}" ]; then
           WORKDIR="."
        fi

        if [ -z "${NAMESPACE}" ]; then
          NAMESPACE="${{ github.repository_owner }}"
        fi

        if [ -z "${DESCRIPTION}" ]; then
          cat <<EOF > /tmp/commit-message.txt
          ${{ github.event.head_commit.message }}
        EOF
          DESCRIPTION=$(cat /tmp/commit-message.txt | head -n 1)
        fi

        BUILD_ARGS="--build-arg TAG_VERSION=${TAG_VERSION} --build-arg BUILD_SHA=${GITHUB_SHA}"
        LABEL_ARGS=(
          --label "org.label-schema.name=${NAME}"
          --label "org.label-schema.schema-version=1.0"
          --label "org.label-schema.vcs-url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          --label "org.label-schema.vcs-ref=${GITHUB_SHA}"
          --label "org.label-schema.build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          --label "org.label-schema.version=${TAG_VERSION}"
          --label "org.label-schema.description=${DESCRIPTION}"
          --label "org.label-schema.usage=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/tree/${TAG_NAME}/docs/index.md"
          --label "org.label-schema.url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          --label "org.opencontainers.image.ref.name=${NAME}"
          --label "org.opencontainers.image.source=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          --label "org.opencontainers.image.revision=${GITHUB_SHA}"
          --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          --label "org.opencontainers.image.version=${TAG_VERSION}"
          --label "org.opencontainers.image.url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
          --label "org.opencontainers.image.title=${NAME}"
          --label "org.opencontainers.image.documentation=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/tree/${TAG_NAME}/docs/index.md"
          --label "org.opencontainers.image.description=${DESCRIPTION}"
          --label "org.opencontainers.image.authors=${GITHUB_ACTOR}"
          --label "org.opencontainers.image.licenses=â€œ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/tree/${TAG_NAME}/LICENSE"
        )

        if [ -z "${REGISTRY}" ]; then
          REGISTRY="${{ inputs.registry }}"
        fi

        if [ -z "${REGION}" ]; then
          REGION="${{ inputs.region }}"
        fi

        if [ -z "${GCP_PROJECT_ID}" ]; then
          GCP_PROJECT_ID="${{ inputs.gcp_project_id }}"
        fi

        if [ -z "${GCP_REPOSITORY_NAME}" ]; then
          GCP_REPOSITORY_NAME="${{ inputs.gcp_repository_name }}"
        fi

        if [ "${REGISTRY}" = "docker.io" ]; then
          if [ -z "${DOCKER_USERNAME}" ] || [ -z "${DOCKER_PASSWORD}" ]; then
            echo "DOCKER_USERNAME and DOCKER_PASSWORD must be set when using docker.io registry"
            exit 1
          fi
          docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
          TAGS="--tag ${NAMESPACE}/${NAME}:${TAG_VERSION} --tag ${NAMESPACE}/${NAME}:latest"
        else
          if [ "${REGISTRY}" = "gcp" ]; then
            if [ -z "${REGION}" ]; then
              echo "REGION must be set when using 'gcp' registry"
              exit 1
            fi
            if  [ -z "${GCP_PROJECT_ID}" ]; then
              echo "GCP_PROJECT_ID must be set when using 'gcp' registry"
              exit 1
            fi
            if  [ -z "${GCP_REPOSITORY_NAME}" ]; then
              echo "GCP_REPOSITORY_NAME must be set when using 'gcp' registry"
              exit 1
            fi
            gcloud auth configure-docker --quiet ${REGION}-docker.pkg.dev
            TAGS="--tag ${REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${GCP_REPOSITORY_NAME}/${NAME}:${TAG_VERSION} --tag ${REGION}-docker.pkg.dev/${GCP_PROJECT_ID}/${GCP_REPOSITORY_NAME}/${NAME}:latest"
          fi
        fi
        docker buildx create --use
        docker buildx build --push "${LABEL_ARGS[@]}" ${BUILD_ARGS} --no-cache --progress plain --file ${DOCKERFILE} --platform $PLATFORMS $TAGS $WORKDIR
